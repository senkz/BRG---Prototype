import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;

public class Database
{
	private final static String userNameList = "UserList";
	private final static File userNameFile = new File(userNameList+".txt");
	
	private final static String credentialsString = "credentials";
	private final static File credentialFile = new File(credentialsString+".txt");
	
	private static ArrayList<String> users = new ArrayList<String>();
	private static ArrayList<String> tempList= new ArrayList<String>();

	private static String line;
	private static BufferedReader br;
	public static void initialize()
	{
		try 
		{
			userNameFile.createNewFile();
			br = new BufferedReader(new FileReader(userNameFile));
			
			while((line = br.readLine()) != null)
			{
				users.add(line);
			}
			
			line = "";
			for (String _user : users)
			{
				br = new BufferedReader(new FileReader(_user+".txt"));
				while((line = br.readLine()) != null)
				{
					tempList.add(line);
					//Register.addUser(new User(tempList.get(0), _user, _user, _user, _user, _user, _user, _user));
				}
			}
		} 
		catch (IOException e)
		{
			e.printStackTrace();
		}
		getCredentials();
	}
	
	static String getCredentials()
	{
		try 
		{
			credentialFile.createNewFile();
			br = new BufferedReader(new FileReader(credentialFile));
			
			while((line = br.readLine()) != null)
			{
				System.out.println(line);
				return line;
			}
		} 
		catch (IOException e)
		{
			e.printStackTrace();
		}
		return null;
	}
	
	public static void setCredentials(String _name, char [] _password)
	{
		  try
		  {
			  credentialFile.delete();
			  credentialFile.createNewFile();
			  // Create file 
			  FileWriter fstream = new FileWriter(credentialFile);
			  BufferedWriter out = new BufferedWriter(fstream);
			  out.write(_name+":"+new String(_password));
			  //Close the output stream
			  out.close();
			  }catch (Exception e){//Catch exception if any
			  System.err.println("Error: " + e.getMessage());
			  }
	}

	public static boolean isAvailableId(String _username, char [] _password) 
	{
		for (User s : Register.userList)
		{
			if (s.getUsername().equals(_username)&&s.getPassword().equals(new String(_password)))
			{
				return false;
			}
		}
		return true;
		
		
	}
}